{"remainingRequest":"/Users/clayton/Sites/Vue/Vue-Mastery/Real World Vue - Author's Source/node_modules/babel-loader/lib/index.js!/Users/clayton/Sites/Vue/Vue-Mastery/Real World Vue - Author's Source/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/clayton/Sites/Vue/Vue-Mastery/Real World Vue - Author's Source/src/views/EventList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/clayton/Sites/Vue/Vue-Mastery/Real World Vue - Author's Source/src/views/EventList.vue","mtime":1538773963000},{"path":"/Users/clayton/Sites/Vue/Vue-Mastery/Real World Vue - Author's Source/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/clayton/Sites/Vue/Vue-Mastery/Real World Vue - Author's Source/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/clayton/Sites/Vue/Vue-Mastery/Real World Vue - Author's Source/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/clayton/Sites/Vue/Vue-Mastery/Real World Vue - Author's Source/node_modules/@babel/runtime/helpers/builtin/es6/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport EventCard from '@/components/EventCard.vue';\nimport { mapState } from 'vuex';\nexport default {\n  components: {\n    EventCard: EventCard\n  },\n  created: function created() {\n    this.perPage = 3; // Setting perPage here and not in data means it won't be reactive.\n    // We don't need it to be reactive, and this way our component has access to it.\n\n    this.$store.dispatch('fetchEvents', {\n      perPage: this.perPage,\n      page: this.page\n    });\n  },\n  computed: _objectSpread({\n    page: function page() {\n      return parseInt(this.$route.query.page) || 1;\n    },\n    hasNextPage: function hasNextPage() {\n      return this.eventsTotal > this.page * this.perPage;\n    }\n  }, mapState(['events', 'eventsTotal']))\n};",{"version":3,"sources":["EventList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA,OAAA,SAAA,MAAA,4BAAA;AACA,SAAA,QAAA,QAAA,MAAA;AAEA,eAAA;AACA,cAAA;AACA;AADA,GADA;AAIA,SAJA,qBAIA;AACA,SAAA,OAAA,GAAA,CAAA,CADA,CACA;AACA;;AAEA,SAAA,MAAA,CAAA,QAAA,CAAA,aAAA,EAAA;AACA,eAAA,KAAA,OADA;AAEA,YAAA,KAAA;AAFA,KAAA;AAIA,GAZA;AAaA;AACA,QADA,kBACA;AACA,aAAA,SAAA,KAAA,MAAA,CAAA,KAAA,CAAA,IAAA,KAAA,CAAA;AACA,KAHA;AAIA,eAJA,yBAIA;AACA,aAAA,KAAA,WAAA,GAAA,KAAA,IAAA,GAAA,KAAA,OAAA;AACA;AANA,KAOA,SAAA,CAAA,QAAA,EAAA,aAAA,CAAA,CAPA;AAbA,CAAA","sourcesContent":["<template>\n  <div>\n    <h1>Events Listing</h1>\n    <EventCard v-for=\"event in events\" :key=\"event.id\" :event=\"event\"/>\n    <template v-if=\"page != 1\">\n      <router-link :to=\"{ name: 'event-list', query: { page: page - 1 } }\" rel=\"prev\">\n      Prev Page</router-link>\n      <template v-if=\"hasNextPage\"> | </template>\n    </template>\n    <router-link v-if=\"hasNextPage\" :to=\"{ name: 'event-list', query: { page: page + 1 } }\" rel=\"next\">\n      Next Page</router-link>\n  </div>\n</template>\n\n<script>\nimport EventCard from '@/components/EventCard.vue'\nimport { mapState } from 'vuex'\n\nexport default {\n  components: {\n    EventCard\n  },\n  created() {\n    this.perPage = 3 // Setting perPage here and not in data means it won't be reactive.\n    // We don't need it to be reactive, and this way our component has access to it.\n\n    this.$store.dispatch('fetchEvents', {\n      perPage: this.perPage,\n      page: this.page\n    })\n  },\n  computed: {\n    page() {\n      return parseInt(this.$route.query.page) || 1\n    },\n    hasNextPage() {\n      return this.eventsTotal > this.page * this.perPage\n    },\n    ...mapState(['events', 'eventsTotal'])\n  }\n}\n</script>\n"],"sourceRoot":"src/views"}]}