{"remainingRequest":"/Users/clayton/Sites/Vue/Vue-Mastery/Real World Vue - Author's Source/node_modules/babel-loader/lib/index.js!/Users/clayton/Sites/Vue/Vue-Mastery/Real World Vue - Author's Source/node_modules/eslint-loader/index.js??ref--13-0!/Users/clayton/Sites/Vue/Vue-Mastery/Real World Vue - Author's Source/src/store/store.js","dependencies":[{"path":"/Users/clayton/Sites/Vue/Vue-Mastery/Real World Vue - Author's Source/src/store/store.js","mtime":1593638950428},{"path":"/Users/clayton/Sites/Vue/Vue-Mastery/Real World Vue - Author's Source/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/clayton/Sites/Vue/Vue-Mastery/Real World Vue - Author's Source/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/clayton/Sites/Vue/Vue-Mastery/Real World Vue - Author's Source/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport EventService from '@/services/EventService.js';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    user: {\n      id: 'abc123',\n      name: 'Adam Jahr'\n    },\n    categories: ['sustainability', 'nature', 'animal welfare', 'housing', 'education', 'food', 'community'],\n    events: [],\n    event: {}\n  },\n  mutations: {\n    ADD_EVENT: function ADD_EVENT(state, event) {\n      state.events.push(event);\n    },\n    SET_EVENTS: function SET_EVENTS(state, events) {\n      state.events = events;\n    },\n    SET_EVENT: function SET_EVENT(state, event) {\n      state.event = event;\n    }\n  },\n  actions: {\n    createEvent: function createEvent(_ref, event) {\n      var commit = _ref.commit;\n      return EventService.postEvent(event).then(function () {\n        commit('ADD_EVENT', event);\n      });\n    },\n    fetchEvents: function fetchEvents(_ref2, _ref3) {\n      var commit = _ref2.commit;\n      var perPage = _ref3.perPage,\n          page = _ref3.page;\n      EventService.getEvents(perPage, page).then(function (response) {\n        commit('SET_EVENTS', response.data);\n      }).catch(function (error) {\n        console.log('There was an error:', error.response);\n      });\n    },\n    fetchEvent: function fetchEvent(_ref4, id) {\n      var commit = _ref4.commit,\n          getters = _ref4.getters;\n      var event = getters.getEventById(id);\n\n      if (event) {\n        commit('SET_EVENT', event);\n      } else {\n        EventService.getEvent(id).then(function (response) {\n          commit('SET_EVENT', response.data);\n        }).catch(function (error) {\n          console.log('There was an error:', error.response);\n        });\n      }\n    }\n  },\n  getters: {\n    getEventById: function getEventById(state) {\n      return function (id) {\n        return state.events.find(function (event) {\n          return event.id === id;\n        });\n      };\n    }\n  }\n});",{"version":3,"sources":["/Users/clayton/Sites/Vue/Vue-Mastery/Real World Vue - Author's Source/src/store/store.js"],"names":["Vue","Vuex","EventService","use","Store","state","user","id","name","categories","events","event","mutations","ADD_EVENT","push","SET_EVENTS","SET_EVENT","actions","createEvent","commit","postEvent","then","fetchEvents","perPage","page","getEvents","response","data","catch","console","log","error","fetchEvent","getters","getEventById","getEvent","find"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AAEAF,IAAIG,GAAJ,CAAQF,IAAR;AAEA,eAAe,IAAIA,KAAKG,KAAT,CAAe;AAC5BC,SAAO;AACLC,UAAM;AAAEC,UAAI,QAAN;AAAgBC,YAAM;AAAtB,KADD;AAELC,gBAAY,CACV,gBADU,EAEV,QAFU,EAGV,gBAHU,EAIV,SAJU,EAKV,WALU,EAMV,MANU,EAOV,WAPU,CAFP;AAWLC,YAAQ,EAXH;AAYLC,WAAO;AAZF,GADqB;AAe5BC,aAAW;AACTC,aADS,qBACCR,KADD,EACQM,KADR,EACe;AACtBN,YAAMK,MAAN,CAAaI,IAAb,CAAkBH,KAAlB;AACD,KAHQ;AAITI,cAJS,sBAIEV,KAJF,EAISK,MAJT,EAIiB;AACxBL,YAAMK,MAAN,GAAeA,MAAf;AACD,KANQ;AAOTM,aAPS,qBAOCX,KAPD,EAOQM,KAPR,EAOe;AACtBN,YAAMM,KAAN,GAAcA,KAAd;AACD;AATQ,GAfiB;AA0B5BM,WAAS;AACPC,eADO,6BACiBP,KADjB,EACwB;AAAA,UAAjBQ,MAAiB,QAAjBA,MAAiB;AAC7B,aAAOjB,aAAakB,SAAb,CAAuBT,KAAvB,EAA8BU,IAA9B,CAAmC,YAAM;AAC9CF,eAAO,WAAP,EAAoBR,KAApB;AACD,OAFM,CAAP;AAGD,KALM;AAMPW,eANO,qCAMoC;AAAA,UAA7BH,MAA6B,SAA7BA,MAA6B;AAAA,UAAjBI,OAAiB,SAAjBA,OAAiB;AAAA,UAARC,IAAQ,SAARA,IAAQ;AACzCtB,mBAAauB,SAAb,CAAuBF,OAAvB,EAAgCC,IAAhC,EACGH,IADH,CACQ,oBAAY;AAChBF,eAAO,YAAP,EAAqBO,SAASC,IAA9B;AACD,OAHH,EAIGC,KAJH,CAIS,iBAAS;AACdC,gBAAQC,GAAR,CAAY,qBAAZ,EAAmCC,MAAML,QAAzC;AACD,OANH;AAOD,KAdM;AAePM,cAfO,6BAeyBzB,EAfzB,EAe6B;AAAA,UAAvBY,MAAuB,SAAvBA,MAAuB;AAAA,UAAfc,OAAe,SAAfA,OAAe;AAClC,UAAItB,QAAQsB,QAAQC,YAAR,CAAqB3B,EAArB,CAAZ;;AAEA,UAAII,KAAJ,EAAW;AACTQ,eAAO,WAAP,EAAoBR,KAApB;AACD,OAFD,MAEO;AACLT,qBAAaiC,QAAb,CAAsB5B,EAAtB,EACGc,IADH,CACQ,oBAAY;AAChBF,iBAAO,WAAP,EAAoBO,SAASC,IAA7B;AACD,SAHH,EAIGC,KAJH,CAIS,iBAAS;AACdC,kBAAQC,GAAR,CAAY,qBAAZ,EAAmCC,MAAML,QAAzC;AACD,SANH;AAOD;AACF;AA7BM,GA1BmB;AAyD5BO,WAAS;AACPC,kBAAc;AAAA,aAAS,cAAM;AAC3B,eAAO7B,MAAMK,MAAN,CAAa0B,IAAb,CAAkB;AAAA,iBAASzB,MAAMJ,EAAN,KAAaA,EAAtB;AAAA,SAAlB,CAAP;AACD,OAFa;AAAA;AADP;AAzDmB,CAAf,CAAf","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport EventService from '@/services/EventService.js'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    user: { id: 'abc123', name: 'Adam Jahr' },\n    categories: [\n      'sustainability',\n      'nature',\n      'animal welfare',\n      'housing',\n      'education',\n      'food',\n      'community'\n    ],\n    events: [],\n    event: {}\n  },\n  mutations: {\n    ADD_EVENT(state, event) {\n      state.events.push(event)\n    },\n    SET_EVENTS(state, events) {\n      state.events = events\n    },\n    SET_EVENT(state, event) {\n      state.event = event\n    }\n  },\n  actions: {\n    createEvent({ commit }, event) {\n      return EventService.postEvent(event).then(() => {\n        commit('ADD_EVENT', event)\n      })\n    },\n    fetchEvents({ commit }, { perPage, page }) {\n      EventService.getEvents(perPage, page)\n        .then(response => {\n          commit('SET_EVENTS', response.data)\n        })\n        .catch(error => {\n          console.log('There was an error:', error.response)\n        })\n    },\n    fetchEvent({ commit, getters }, id) {\n      var event = getters.getEventById(id)\n\n      if (event) {\n        commit('SET_EVENT', event)\n      } else {\n        EventService.getEvent(id)\n          .then(response => {\n            commit('SET_EVENT', response.data)\n          })\n          .catch(error => {\n            console.log('There was an error:', error.response)\n          })\n      }\n    }\n  },\n  getters: {\n    getEventById: state => id => {\n      return state.events.find(event => event.id === id)\n    }\n  }\n})\n"]}]}