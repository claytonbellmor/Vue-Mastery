{"remainingRequest":"/Users/clayton/Sites/Vue/Vue-Mastery/Real World Vue - Author's Source/node_modules/babel-loader/lib/index.js!/Users/clayton/Sites/Vue/Vue-Mastery/Real World Vue - Author's Source/node_modules/eslint-loader/index.js??ref--13-0!/Users/clayton/Sites/Vue/Vue-Mastery/Real World Vue - Author's Source/src/store/modules/events.js","dependencies":[{"path":"/Users/clayton/Sites/Vue/Vue-Mastery/Real World Vue - Author's Source/src/store/modules/events.js","mtime":1593639819076},{"path":"/Users/clayton/Sites/Vue/Vue-Mastery/Real World Vue - Author's Source/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/clayton/Sites/Vue/Vue-Mastery/Real World Vue - Author's Source/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/clayton/Sites/Vue/Vue-Mastery/Real World Vue - Author's Source/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport EventService from '@/services/EventService.js';\nexport var state = {\n  events: [],\n  eventsTotal: 0,\n  event: {}\n};\nexport var mutations = {\n  ADD_EVENT: function ADD_EVENT(state, event) {\n    state.events.push(event);\n  },\n  SET_EVENTS: function SET_EVENTS(state, events) {\n    state.events = events;\n  },\n  SET_EVENTS_TOTAL: function SET_EVENTS_TOTAL(state, eventsTotal) {\n    state.eventsTotal = eventsTotal;\n  },\n  SET_EVENT: function SET_EVENT(state, event) {\n    state.event = event;\n  }\n};\nexport var actions = {\n  createEvent: function createEvent(_ref, event) {\n    var commit = _ref.commit;\n    return EventService.postEvent(event).then(function () {\n      commit('ADD_EVENT', event);\n    });\n  },\n  fetchEvents: function fetchEvents(_ref2, _ref3) {\n    var commit = _ref2.commit;\n    var perPage = _ref3.perPage,\n        page = _ref3.page;\n    EventService.getEvents(perPage, page).then(function (response) {\n      commit('SET_EVENTS_TOTAL', parseInt(response.headers['x-total-count']));\n      commit('SET_EVENTS', response.data);\n    }).catch(function (error) {\n      console.log('There was an error:', error.response);\n    });\n  },\n  fetchEvent: function fetchEvent(_ref4, id) {\n    var commit = _ref4.commit,\n        getters = _ref4.getters;\n    var event = getters.getEventById(id);\n\n    if (event) {\n      commit('SET_EVENT', event);\n    } else {\n      EventService.getEvent(id).then(function (response) {\n        commit('SET_EVENT', response.data);\n      }).catch(function (error) {\n        console.log('There was an error:', error.response);\n      });\n    }\n  }\n};\nexport var getters = {\n  getEventById: function getEventById(state) {\n    return function (id) {\n      return state.events.find(function (event) {\n        return event.id === id;\n      });\n    };\n  }\n};",{"version":3,"sources":["/Users/clayton/Sites/Vue/Vue-Mastery/Real World Vue - Author's Source/src/store/modules/events.js"],"names":["EventService","state","events","eventsTotal","event","mutations","ADD_EVENT","push","SET_EVENTS","SET_EVENTS_TOTAL","SET_EVENT","actions","createEvent","commit","postEvent","then","fetchEvents","perPage","page","getEvents","parseInt","response","headers","data","catch","console","log","error","fetchEvent","id","getters","getEventById","getEvent","find"],"mappings":";AAAA,OAAOA,YAAP,MAAyB,4BAAzB;AAEA,OAAO,IAAMC,QAAQ;AACnBC,UAAQ,EADW;AAEnBC,eAAa,CAFM;AAGnBC,SAAO;AAHY,CAAd;AAMP,OAAO,IAAMC,YAAY;AACvBC,WADuB,qBACbL,KADa,EACNG,KADM,EACC;AACtBH,UAAMC,MAAN,CAAaK,IAAb,CAAkBH,KAAlB;AACD,GAHsB;AAIvBI,YAJuB,sBAIZP,KAJY,EAILC,MAJK,EAIG;AACxBD,UAAMC,MAAN,GAAeA,MAAf;AACD,GANsB;AAOvBO,kBAPuB,4BAONR,KAPM,EAOCE,WAPD,EAOc;AACnCF,UAAME,WAAN,GAAoBA,WAApB;AACD,GATsB;AAUvBO,WAVuB,qBAUbT,KAVa,EAUNG,KAVM,EAUC;AACtBH,UAAMG,KAAN,GAAcA,KAAd;AACD;AAZsB,CAAlB;AAeP,OAAO,IAAMO,UAAU;AACrBC,aADqB,6BACGR,KADH,EACU;AAAA,QAAjBS,MAAiB,QAAjBA,MAAiB;AAC7B,WAAOb,aAAac,SAAb,CAAuBV,KAAvB,EAA8BW,IAA9B,CAAmC,YAAM;AAC9CF,aAAO,WAAP,EAAoBT,KAApB;AACD,KAFM,CAAP;AAGD,GALoB;AAMrBY,aANqB,qCAMsB;AAAA,QAA7BH,MAA6B,SAA7BA,MAA6B;AAAA,QAAjBI,OAAiB,SAAjBA,OAAiB;AAAA,QAARC,IAAQ,SAARA,IAAQ;AACzClB,iBAAamB,SAAb,CAAuBF,OAAvB,EAAgCC,IAAhC,EACGH,IADH,CACQ,oBAAY;AAChBF,aAAO,kBAAP,EAA2BO,SAASC,SAASC,OAAT,CAAiB,eAAjB,CAAT,CAA3B;AACAT,aAAO,YAAP,EAAqBQ,SAASE,IAA9B;AACD,KAJH,EAKGC,KALH,CAKS,iBAAS;AACdC,cAAQC,GAAR,CAAY,qBAAZ,EAAmCC,MAAMN,QAAzC;AACD,KAPH;AAQD,GAfoB;AAgBrBO,YAhBqB,6BAgBWC,EAhBX,EAgBe;AAAA,QAAvBhB,MAAuB,SAAvBA,MAAuB;AAAA,QAAfiB,OAAe,SAAfA,OAAe;AAClC,QAAI1B,QAAQ0B,QAAQC,YAAR,CAAqBF,EAArB,CAAZ;;AAEA,QAAIzB,KAAJ,EAAW;AACTS,aAAO,WAAP,EAAoBT,KAApB;AACD,KAFD,MAEO;AACLJ,mBAAagC,QAAb,CAAsBH,EAAtB,EACGd,IADH,CACQ,oBAAY;AAChBF,eAAO,WAAP,EAAoBQ,SAASE,IAA7B;AACD,OAHH,EAIGC,KAJH,CAIS,iBAAS;AACdC,gBAAQC,GAAR,CAAY,qBAAZ,EAAmCC,MAAMN,QAAzC;AACD,OANH;AAOD;AACF;AA9BoB,CAAhB;AAiCP,OAAO,IAAMS,UAAU;AACrBC,gBAAc;AAAA,WAAS,cAAM;AAC3B,aAAO9B,MAAMC,MAAN,CAAa+B,IAAb,CAAkB;AAAA,eAAS7B,MAAMyB,EAAN,KAAaA,EAAtB;AAAA,OAAlB,CAAP;AACD,KAFa;AAAA;AADO,CAAhB","sourcesContent":["import EventService from '@/services/EventService.js'\n\nexport const state = {\n  events: [],\n  eventsTotal: 0,\n  event: {}\n}\n\nexport const mutations = {\n  ADD_EVENT(state, event) {\n    state.events.push(event)\n  },\n  SET_EVENTS(state, events) {\n    state.events = events\n  },\n  SET_EVENTS_TOTAL(state, eventsTotal) {\n    state.eventsTotal = eventsTotal\n  },\n  SET_EVENT(state, event) {\n    state.event = event\n  }\n}\n\nexport const actions = {\n  createEvent({ commit }, event) {\n    return EventService.postEvent(event).then(() => {\n      commit('ADD_EVENT', event)\n    })\n  },\n  fetchEvents({ commit }, { perPage, page }) {\n    EventService.getEvents(perPage, page)\n      .then(response => {\n        commit('SET_EVENTS_TOTAL', parseInt(response.headers['x-total-count']))\n        commit('SET_EVENTS', response.data)\n      })\n      .catch(error => {\n        console.log('There was an error:', error.response)\n      })\n  },\n  fetchEvent({ commit, getters }, id) {\n    var event = getters.getEventById(id)\n\n    if (event) {\n      commit('SET_EVENT', event)\n    } else {\n      EventService.getEvent(id)\n        .then(response => {\n          commit('SET_EVENT', response.data)\n        })\n        .catch(error => {\n          console.log('There was an error:', error.response)\n        })\n    }\n  }\n}\n\nexport const getters = {\n  getEventById: state => id => {\n    return state.events.find(event => event.id === id)\n  }\n}\n"]}]}